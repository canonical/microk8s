{
  "openapi": "3.0.0",
  "info": {
    "description": "Various endpoints to get information and manage your MicroK8s",
    "version": "1.0",
    "title": "MicroK8s REST API"
  },
  "servers": [
    {
      "url": "/cluster/api/v1.0"
    }
  ],
  "tags": [
    {
      "name": "MicroK8s",
      "description": "Supported endpoints"
    }
  ],
  "paths": {
    "/join": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Web call to join a node to the cluster",
        "requestBody": {
          "description": "Provide callback-token, token, hostname and port",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/join"
              },
              "example": {
                "callback": "xyztoken",
                "token": "token",
                "hostname": "<hostname>",
                "port": "<port>"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/join"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/sign-sert": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Web call to sign a certificate",
        "requestBody": {
          "description": "Provide token and request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sign-cert"
              },
              "example": {
                "token": "token",
                "hostname": "<request>"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/sign-cert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/configure": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Web call to configure the node",
        "requestBody": {
          "description": "Provide callback-token and json configuration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              },
              "example": {
                "callback": "xyztoken",
                "service": [
                  {
                    "name": "kubelet",
                    "arguments_remove": [
                      "myoldarg"
                    ],
                    "arguments_update": [
                      {
                        "myarg": "myvalue"
                      },
                      {
                        "myarg2": "myvalue2"
                      },
                      {
                        "myarg3": "myvalue3"
                      }
                    ],
                    "restart": false
                  },
                  {
                    "name": "kube-proxy",
                    "restart": true
                  }
                ],
                "addon": [
                  {
                    "name": "gpu",
                    "enable": true
                  },
                  {
                    "name": "gpu",
                    "disable": true
                  }
                ]
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/callback_config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/version": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Returns the installed version of MicroK8s",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              },
              "example": {
                "callback": "xyztoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "version": {
                    "summary": "Version output example",
                    "value": "v1.17.4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/start": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Start MicroK8s",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              },
              "example": {
                "callback": "xyztoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/stop": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Stop MicroK8s",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              },
              "example": {
                "callback": "xyztoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/status": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Returns MicroK8s status",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file. Optionally you can provide a specific addon name and get its status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addon_optional"
              },
              "examples": {
                "status": {
                  "summary": "Get MicroK8s status",
                  "value": {
                    "callback": "xyztoken"
                  }
                },
                "status_addon": {
                  "summary": "Get status for an AddOn",
                  "value": {
                    "callback": "xyztoken",
                    "addon": "dns"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/overview": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Returns MicroK8s overview of all namespaces",
        "requestBody": {
          "description": "Provide the token saved in callback-token file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "overview": {
                    "summary": "Overview example",
                    "value": "NAMESPACE   NAME                 TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE default     service/kubernetes   ClusterIP   10.152.183.1   <none>        443/TCP   10h"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/addon/enable": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Enable MicroK8s addOn",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file and the name of the addon you want to enable",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addon"
              },
              "example": {
                "callback": "xyztoken",
                "addon": "dns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/addon/disable": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Disable MicroK8s addOn",
        "requestBody": {
          "description": "Provide the token saved in callback-token.txt file and the name of the addon you want to disable",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addon"
              },
              "example": {
                "callback": "xyztoken",
                "addon": "dns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/services": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Returns MicroK8s services information",
        "requestBody": {
          "description": "Get MicroK8s services information ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callback"
              },
              "example": {
                "callback": "xyztoken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "services": {
                    "microk8s.daemon-apiserver": "simple, enabled, active",
                    "microk8s.daemon-apiserver-kicker": "simple, enabled, active",
                    "microk8s.daemon-cluster-agent": "simple, enabled, active",
                    "microk8s.daemon-containerd": "simple, enabled, active",
                    "microk8s.daemon-controller-manager": "simple, enabled, active",
                    "microk8s.daemon-etcd": "simple, enabled, active",
                    "microk8s.daemon-flanneld": "simple, enabled, active",
                    "microk8s.daemon-kubelet": "simple, enabled, active",
                    "microk8s.daemon-proxy": "simple, enabled, active",
                    "microk8s.daemon-scheduler": "simple, enabled, active"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/restart": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Restart MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to restart. Run the /services endpoint to get the names ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service"
              },
              "example": {
                "callback": "xyztoken",
                "service": "microk8s.daemon-flanneld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/start": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Start a MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to start. Run the /services endpoint to get the names ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service"
              },
              "example": {
                "callback": "xyztoken",
                "service": "microk8s.daemon-flanneld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/stop": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Stop a MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to stop. Run the /services endpoint to get the names ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service"
              },
              "example": {
                "callback": "xyztoken",
                "service": "microk8s.daemon-flanneld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/enable": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Enable a MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to enable. Run the /services endpoint to get the names ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service"
              },
              "example": {
                "callback": "xyztoken",
                "service": "microk8s.daemon-flanneld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/disable": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Disable a MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to disable. Run the /services endpoint to get the names ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/service"
              },
              "example": {
                "callback": "xyztoken",
                "service": "microk8s.daemon-flanneld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/service/logs": {
      "post": {
        "tags": [
          "MicroK8s"
        ],
        "summary": "Get the logs of  a MicroK8s service",
        "requestBody": {
          "description": "The name of the MicroK8s service to disable. Run the /services endpoint to get the names. Provide the number of lines of logs to return ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logs"
              },
              "examples": {
                "service_logs": {
                  "summary": "Get the last 10 (default) lines of logs",
                  "value": {
                    "callback": "xyztoken",
                    "service": "microk8s.daemon-cluster-agent"
                  }
                },
                "service_logs_lines": {
                  "summary": "Get the last 20 lines of logs",
                  "value": {
                    "callback": "xyztoken",
                    "service": "microk8s.daemon-cluster-agent",
                    "lines": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "callback": {
        "type": "object",
        "required": [
          "callback"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "callback_config": {
        "type": "object",
        "required": [
          "callback",
          "configuration"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string",
            "example": "xyztoken"
          },
          "configuration": {
            "type": "string",
            "format": "string",
            "example": "{ \"callback\": \"xyztoken\", \"service\": [ { \"name\": \"kubelet\", \"arguments_remove\": [ \"myoldarg\" ], \"arguments_update\": [ {\"myarg\": \"myvalue\"}, {\"myarg2\": \"myvalue2\"}, {\"myarg3\": \"myvalue3\"} ], \"restart\": false }, { \"name\": \"kube-proxy\", \"restart\": true } ], \"addon\": [ { \"name\": \"gpu\", \"enable\": true }, { \"name\": \"gpu\", \"disable\": true } ] }"
          }
        }
      },
      "service": {
        "type": "object",
        "required": [
          "callback",
          "service"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          },
          "service": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "addon": {
        "type": "object",
        "required": [
          "callback",
          "addon"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          },
          "addon": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "addon_optional": {
        "type": "object",
        "required": [
          "callback"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          },
          "addon": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "logs": {
        "type": "object",
        "required": [
          "callback",
          "service"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          },
          "service": {
            "type": "string",
            "format": "string"
          },
          "lines": {
            "type": "number",
            "format": "integer"
          }
        }
      },
      "join": {
        "type": "object",
        "required": [
          "callback",
          "token",
          "hostname",
          "port"
        ],
        "properties": {
          "callback": {
            "type": "string",
            "format": "string"
          },
          "token": {
            "type": "string",
            "format": "string"
          },
          "hostname": {
            "type": "string",
            "format": "string"
          },
          "port": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "sign-cert": {
        "type": "object",
        "required": [
          "token",
          "request"
        ],
        "properties": {
          "token": {
            "type": "string",
            "format": "string"
          },
          "request": {
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  }
}