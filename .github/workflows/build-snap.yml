name: Build MicroK8s snap on PR and push to master

on:
  - push
  - pull_request

### While we work on the strict feature we want the tests to run even if we do put PRs against the master.
### When this work get merged into master the following should be commented in.
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master

jobs:
  build:
    name: Create snap package
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out repo
        uses: actions/checkout@v2.3.4
      - name: Install lxd
        run: |
          sudo lxd init --auto
          sudo usermod --append --groups lxd $USER
          sg lxd -c 'lxc version'
      - name: Install snapcraft
        run: sudo snap install snapcraft --classic
      - name: Build snap
        run: |
          sg lxd -c 'snapcraft --use-lxd'
          sudo mv microk8s*.snap microk8s.snap
      - name: Uploading snap
        uses: actions/upload-artifact@v1
        with:
          name: microk8s.snap
          path: microk8s.snap
      # TEMPORARY WHILE GITHUB FIXES THIS https://github.com/actions/virtual-environments/issues/3185
      - name: Add the current IP address, long hostname and short hostname record to /etc/hosts file
        run: |
          echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      # DO NOT FORGET TO REMOVE CODE ABOVE WHEN ISSUE IS ADDRESSED!
      - name: Install dependencies
        run: |
          set -x
          sudo apt-get install python3-setuptools
          sudo pip3 install --upgrade pip
          sudo pip3 install -U pytest sh
          sudo apt-get -y install open-iscsi
          sudo systemctl enable iscsid
      - name: Check branches
        run: |
          set -x
          (cd tests; pytest -s verify-branches.py)
      - name: Running addons tests in strict mode
        run: |
          set -x
          sudo snap install microk8s.snap --dangerous
          for i in docker-privileged docker-support kubernetes-support k8s-journald k8s-kubelet \
                   k8s-kubeproxy dot-kube network network-bind network-control network-observe \
                   firewall-control process-control kernel-module-observe mount-observe \
                   hardware-observe system-observe home opengl home-read-all
          do
            sudo snap connect microk8s:$i
          done
          ./tests/smoke-test.sh
          export UNDER_TIME_PRESSURE="True"
          export SKIP_PROMETHEUS="False"
          (cd tests; sudo -E pytest -s -ra test-addons.py)
          sudo snap remove microk8s --purge
      - name: Running addons tests in devmode
        run: |
          set -x
          sudo snap install microk8s.snap --devmode --dangerous
          ./tests/smoke-test.sh
          export UNDER_TIME_PRESSURE="True"
          export SKIP_PROMETHEUS="False"
          (cd tests; sudo -E pytest -s -ra test-addons.py)
          sudo snap remove microk8s --purge
      - name: Running upgrade path test
        run: |
          set -x
          sudo -E UPGRADE_MICROK8S_FROM=latest/edge UPGRADE_MICROK8S_TO=`pwd`/`ls microk8s*.snap` pytest -s ./tests/test-upgrade-path.py
          sudo snap remove microk8s --purge
      - name: Running upgrade tests
        run: |
          set -x
          export UNDER_TIME_PRESSURE="True"
          sudo -E UPGRADE_MICROK8S_FROM=latest/edge UPGRADE_MICROK8S_TO=`pwd`/`ls microk8s*.snap` pytest -s ./tests/test-upgrade.py
      - name: Generate inspect tarball
        run: >
          sudo microk8s inspect |
          grep -Po "Report tarball is at \K.+" |
          sudo xargs -I {} mv {} inspection-report-${{ strategy.job-index }}.tar.gz
        if: failure()

      - name: Upload inspect tarball
        uses: actions/upload-artifact@v2
        with:
          name: inspection-report-actions
          path: ./inspection-report-${{ strategy.job-index }}.tar.gz
        if: failure()
