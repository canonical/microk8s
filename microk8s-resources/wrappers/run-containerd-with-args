#!/bin/bash

set -ex

# Why we put the /snap/microk8s/current in the path?
# containerd-shims need to call runc. They inherit their PATH from containerd.
# As the snap refreshes runc changes location, eg moves from
# /snap/microk8s/123/usr/bin/runc to /snap/microk8s/124/usr/runc.
# containerd-shims need to look for runc in  /snap/microk8s/current/usr/bin/runc
SNAP_CURRENT="/snap/microk8s/current"
CURRENT_PATH="$SNAP_CURRENT/usr/sbin:$SNAP_CURRENT/usr/bin:$SNAP_CURRENT/sbin:$SNAP_CURRENT/bin"
export PATH="$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$CURRENT_PATH:$PATH"
ARCH="$($SNAP/bin/uname -m)"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/$ARCH-linux-gnu:$SNAP/usr/lib/$ARCH-linux-gnu"
export LD_LIBRARY_PATH=$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH
export XDG_RUNTIME_DIR="${SNAP_COMMON}/run"
mkdir -p "${XDG_RUNTIME_DIR}"

source $SNAP/actions/common/utils.sh

apparmor_parser -r $SNAP/containerd-profile

app=containerd


RUNTIME="runc"
RUNTIME_TYPE="io.containerd.runc.v1"
SNAPSHOTTER=$(snapshotter)

if mount | grep -q 'cgroup2 on /sys/fs/cgroup'; then
  RUNTIME_TYPE="io.containerd.runc.v2"
fi

sed 's@${SNAP}@'"${SNAP}"'@g;s@${SNAP_DATA}@'"${SNAP_DATA}"'@g;s@${SNAPSHOTTER}@'"${SNAPSHOTTER}"'@g;s@${RUNTIME}@'"${RUNTIME}"'@g' $SNAP_DATA/args/containerd-template.toml > $SNAP_DATA/args/containerd.toml
sed -i 's@${RUNTIME_TYPE}@'"${RUNTIME_TYPE}"'@g' $SNAP_DATA/args/containerd.toml


run_flanneld="$(is_service_expected_to_start flanneld)"
if [ "${run_flanneld}" == "1" ]
then
  sed 's@${SNAP}@'"${SNAP}"'@g;s@${SNAP_DATA}@'"${SNAP_DATA}"'@g;s@${SNAP_COMMON}@'"${SNAP_COMMON}"'@g' $SNAP_DATA/args/flannel-template.conflist > $SNAP_DATA/args/cni-network/flannel.conflist
fi

# clean leftover container state if we just booted
if (is_strict && is_first_boot_on_strict) || (! is_strict && is_first_boot)
then
  rm -rf "${SNAP_COMMON}/run/containerd" || true
fi

mkdir -p "${SNAP_COMMON}/run/containerd"

# This is really the only way I could find to get the args passed in correctly.
declare -a args="($(cat $SNAP_DATA/args/$app))"
set -a
. "${SNAP_DATA}/args/${app}-env"
set +a

# wait up to two minutes for the default network interface to appear.
n=0
until [ $n -ge 20 ]
do
  ip route | grep default &> /dev/null && break
  ip -6 route | grep default &> /dev/null && break
  echo "Waiting for default route to appear. (attempt $n)"
  n=$[$n+1]
  sleep 6
done

# Set the path to the Cilium socket correctly for CNI
export CILIUM_SOCK="${SNAP_DATA}/var/run/cilium/cilium.sock"

exec "$SNAP/bin/$app" "${args[@]}"
